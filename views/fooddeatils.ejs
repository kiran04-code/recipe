<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
  <title>Food Details | Recipe World</title>
  <script src="https://cdn.tailwindcss.com"></script>
  <script src="https://cdn.jsdelivr.net/npm/canvas-confetti@1.6.0/dist/confetti.browser.min.js"></script>
</head>
<body class="bg-gray-100 font-sans">

  <!-- Header -->
  <header class="bg-white shadow p-4 text-center">
    <h1 class="text-3xl font-bold text-blue-700">🍴 Recipe World</h1>
    <p class="text-gray-600 text-sm">Delicious food at your fingertips</p>
  </header>

<% if (orderSuccess) { %>
  <div id="successPopup" class="fixed inset-0 bg-green-100/80 flex items-center justify-center z-50">
    <div class="bg-white p-8 rounded-lg shadow-lg text-center animate-bounce scale-105">
      <h2 class="text-2xl font-bold text-green-700 mb-2">🎉 Order Placed Successfully!</h2>
      <p class="text-gray-700">Your delicious food is on the way. Bon Appétit!</p>
    </div>
  </div>

  <audio id="successSound" autoplay>
    <source src="https://assets.mixkit.co/sfx/preview/mixkit-achievement-bell-600.mp3" type="audio/mpeg" />
  </audio>

  <script>
    const sound = document.getElementById("successSound");
    sound && sound.play().catch(e => console.log("Sound autoplay blocked", e));

    const duration = 2 * 1000;
    const animationEnd = Date.now() + duration;
    const defaults = { startVelocity: 30, spread: 360, ticks: 60, zIndex: 1000 };

    const interval = setInterval(() => {
      const timeLeft = animationEnd - Date.now();
      if (timeLeft <= 0) return clearInterval(interval);
      const particleCount = 50 * (timeLeft / duration);
      confetti(Object.assign({}, defaults, {
        particleCount,
        origin: { x: Math.random(), y: Math.random() - 0.2 }
      }));
    }, 250);

    setTimeout(() => {
      const popup = document.getElementById('successPopup');
      if (popup) popup.remove();
    }, 3000);
  </script>
<% } %>

  <!-- Main Content -->
  <main class="max-w-3xl mx-auto mt-10 bg-white p-6 rounded-lg shadow-md">
    <div class="flex flex-col md:flex-row gap-6 items-center">
      <img src="data:image/jpeg;base64,<%= food.FoodImage.toString('base64') %>" alt="<%= food.name %>" class="w-full md:w-1/2 h-64 object-cover rounded-lg shadow" />

      <div class="flex-1">
        <h2 class="text-2xl font-bold text-gray-800 mb-2"><%= food.FoodName %></h2>
        <p class="text-lg text-gray-700 mb-1">💰 Price: ₹<%= food.Price %></p>
        <p class="text-gray-600 mb-4">📦 Stock available: <%= food.stock %> items</p>

        <div class="flex space-x-4 mb-2">
          <a href="/add/card/<%= food._id %>">
            <button class="bg-green-600 hover:bg-green-700 text-white px-5 py-2 rounded transition">🛒 Add to Cart</button>
          </a>
          <button onclick="toggleBuyNow()" class="bg-green-600 hover:bg-green-700 text-white px-5 py-2 rounded transition">💳 Buy Now</button>
        </div>
      </div>
    </div>

    <!-- Buy Now Section -->
    <div id="buyNowSection" class="mt-6 hidden opacity-0 transition-all duration-500 transform scale-95">
      <form action="/order/place/<%= food._id %>" method="post" class="bg-gray-50 p-6 rounded-lg border border-gray-200 shadow-inner space-y-5">
        <input type="hidden" name="foodId" value="<%= food._id %>" />

        <h3 class="text-xl font-bold text-gray-800 mb-2">🚚 Delivery Details</h3>

        <!-- Quantity Input with Buttons -->
        <div>
          <label for="quantity" class="block text-gray-700 font-medium mb-2">Quantity</label>
          <div class="flex items-center max-w-xs">
            <button type="button" onclick="changeQuantity(-1)" class="px-4 py-2 bg-red-500 text-white rounded-l hover:bg-red-600">-</button>
            <input type="number" id="quantity" name="quantity" min="1" max="<%= food.stock %>" value="1" required
                   class="w-full text-center border-y border-gray-300 focus:outline-none focus:ring-2 focus:ring-blue-300">
            <button type="button" onclick="changeQuantity(1)" class="px-4 py-2 bg-green-500 text-white rounded-r hover:bg-green-600">+</button>
          </div>
        </div>

        <!-- Address -->
        <div>
          <label for="address" class="block text-gray-700 font-medium mb-2">Delivery Address</label>
          <textarea name="address" id="address" rows="3" required placeholder="Enter your delivery address..."
                    class="w-full border border-gray-300 rounded px-4 py-2 focus:outline-none focus:ring-2 focus:ring-blue-300"></textarea>
        </div>

        <!-- Payment Method -->
        <div>
          <label class="block text-gray-700 font-medium mb-2">Select Payment Method</label>
          <div class="flex items-center gap-4">
            <label class="flex items-center">
              <input type="radio" name="paymentMethod" value="CashOnDelivery" checked class="mr-2 text-blue-600" />
              Cash on Delivery
            </label>
            <label class="flex items-center">
              <input type="radio" name="paymentMethod" value="Online" class="mr-2 text-blue-600" />
              Online Payment
            </label>
          </div>
        </div>

        <!-- Submit Button -->
        <div class="text-right">
          <button type="submit" class="bg-blue-600 hover:bg-blue-700 text-white px-6 py-2 rounded transition">
            ✅ Place Order
          </button>
        </div>
      </form>
    </div>
  </main>

  <script>
    function toggleBuyNow() {
      const section = document.getElementById('buyNowSection');
      section.classList.toggle('hidden');
      setTimeout(() => {
        section.classList.toggle('opacity-0');
        section.classList.toggle('scale-95');
      }, 10);
    }

    function changeQuantity(change) {
      const input = document.getElementById('quantity');
      const max = parseInt(input.max);
      const min = parseInt(input.min);
      let val = parseInt(input.value);
      val += change;
      if (val >= min && val <= max) {
        input.value = val;
      }
    }
  </script>
</body>
</html>
